
class Game {
    field boolean m_isGameRunning;
    field int m_screenWidth;
    field int m_screenHeight;
    field Circle m_player;
    field int m_playerVel;
    field int m_playerCurVelY;

    constructor Game new() {
        let m_isGameRunning = true;
        let m_screenWidth = 512;
        let m_screenHeight = 256;
        let m_player = Circle.new(16, 16, 16);
        let m_playerVel = 2;
        let m_playerCurVelY = 0;
        return this;
    }

    method void run() {
        while(m_isGameRunning) {
            do handleInput();
            do update();
            do draw();
            do Sys.wait(5);
        }
        return;
    }

    method void handleInput() {
        // Input
        // W:87 A:65 S:83 D:68
        var int inputKey;
        let inputKey = Keyboard.keyPressed();
        // W Key
        if (inputKey = 87) {
            let m_playerCurVelY = -m_playerVel;
            //do Output.printString("W");
        }
        // S Key
        if (inputKey = 83) {
            let m_playerCurVelY = m_playerVel;
        }
        return;
    }

    method void update() {
        do m_player.move(0, m_playerCurVelY);
        // Check if player circle is out of bounds and correct pos. Then stop movement
        if ((m_player.getPosY() - m_player.getRadius()) < 0) {
            do m_player.setPostionY(m_player.getRadius());
        }
        if ((m_player.getPosY() + m_player.getRadius()) > (m_screenHeight - 1)) {
            do m_player.setPostionY(m_screenHeight - m_player.getRadius() - 1);
        }
        return;
    }

    method void draw() {
        do Screen.clearScreen();
        do Screen.setColor(true);
        do m_player.draw();
        return;
    }

    method void dispose() {
        do m_player.dispose();
        do Memory.deAlloc(this);
        return;
    }

}
